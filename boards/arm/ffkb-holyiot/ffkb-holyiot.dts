/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

/dts-v1/;
#include <nordic/nrf52840_qiaa.dtsi>
#include <dt-bindings/zmk/matrix_transform.h>
// #include <dt-bindings/led/led.h>

/ {
    //model = "ffkb-holyiot";
    //compatible = "fingerpunch,ffkb-holyiot"

    chosen {
        zephyr,code-partition = &code_partition;
        zephyr,sram = &sram0;
        zephyr,flash = &flash0;
        zmk,kscan = &kscan0;
        zmk,matrix_transform = &default_transform;
    };

    // leds {
    //     compatible = "gpio-leds";
    //     blue_led: led_0 {
    //         gpios = <&gpio1 2 GPIO_ACTIVE_HIGH>;
    //         label = "Blue LED";
    //         status = "okay";  // 确保节点是激活的
    //     };
    // };

    vbatt {
        compatible = "zmk,battery-voltage-divider";
        label = "BATTERY";
        io-channels = <&adc 1>;
        output-ohms = <2000000>;
        full-ohms = <(2000000 + 750000)>;
    };

    // // Left encoder
    // encoder_1: encoder_1 {
    //     compatible = "alps,ec11";
    //     label = "Encoder 1";
    //     a-gpios = <&gpio0 7 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
    //     b-gpios = <&gpio1 9 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
    //     resolution = <4>;
    //     status = "okay";
    // };

    // // Right encoder
    // encoder_2: encoder_2 {
    //     compatible = "alps,ec11";
    //     label = "Encoder 2";
    //     a-gpios = <&gpio0 12 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
    //     b-gpios = <&gpio0 19 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
    //     resolution = <4>;
    //     status = "okay";
    // };

    // // Center encoder
    // encoder_3: encoder_3 {
    //     compatible = "alps,ec11";
    //     label = "Encoder 3";
    //     a-gpios = <&gpio0 21 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
    //     b-gpios = <&gpio0 23 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
    //     resolution = <4>;
    //     status = "okay";
    // };

    // sensors {
    //     compatible = "zmk,keymap-sensors";
    //     sensors = <&encoder_1 &encoder_2 &encoder_3>;
    // };

    kscan0: kscan_0 {
        compatible = "zmk,kscan-gpio-matrix";
        label = "KSCAN";
        diode-direction = "col2row";

        row-gpios
            = <&gpio0 10 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&gpio0 9 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&gpio1 6 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&gpio1 4 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&gpio0 31 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&gpio0 30 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&gpio0 29 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            ;

        col-gpios
            = <&gpio1 11 GPIO_ACTIVE_HIGH>
            , <&gpio1 10 GPIO_ACTIVE_HIGH>
            , <&gpio1 13 GPIO_ACTIVE_HIGH>
            , <&gpio1 15 GPIO_ACTIVE_HIGH>
            , <&gpio0 4 GPIO_ACTIVE_HIGH>
            , <&gpio0 5 GPIO_ACTIVE_HIGH>
            , <&gpio0 7 GPIO_ACTIVE_HIGH>
            , <&gpio1 9 GPIO_ACTIVE_HIGH>
            , <&gpio0 12 GPIO_ACTIVE_HIGH>
            , <&gpio0 23 GPIO_ACTIVE_HIGH>
            , <&gpio0 21 GPIO_ACTIVE_HIGH>
            , <&gpio0 19 GPIO_ACTIVE_HIGH>
            , <&gpio0 22 GPIO_ACTIVE_HIGH>
            , <&gpio1 0 GPIO_ACTIVE_HIGH>
            , <&gpio1 3 GPIO_ACTIVE_HIGH>
            ;
    };

    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        rows = <7>;
        columns = <15>;

        map = <
            RC(0,0) RC(0,1) RC(0,2)     RC(0,3)     RC(0,4)     RC(0,5)     RC(0,6)     RC(0,7) 
            RC(0,8) RC(0,9) RC(0,10)    RC(0,11)    RC(0,12)
            
            RC(1,0) RC(1,1) RC(1,2)     RC(1,3)     RC(1,4)     RC(1,5)     RC(1,6)     RC(1,7)
            RC(1,8) RC(1,9) RC(1,10)    RC(1,11)    RC(1,12)    RC(1,13)    RC(1,14)

            RC(2,0) RC(2,1) RC(2,2)     RC(2,3)     RC(2,4)     RC(2,5)     RC(2,6)     RC(2,7)
            RC(2,8) RC(2,9) RC(2,10)    RC(2,11)    RC(2,12)    RC(2,13)    RC(2,14)

            RC(3,0) RC(3,1) RC(3,2)     RC(3,3)     RC(3,4)     RC(3,5)     RC(3,6)     RC(3,7)
            RC(3,8) RC(3,9) RC(3,10)    RC(3,11)    RC(3,12)    RC(3,13)    RC(3,14)

            RC(4,0) RC(4,1) RC(4,2)     RC(4,3)     RC(4,4)     RC(4,5)     RC(4,6)     RC(4,7)
            RC(4,8) RC(4,9) RC(4,10)    RC(4,11)    RC(4,12) 

            RC(5,0) RC(5,1) RC(5,2)     RC(5,3)     RC(5,4)     RC(5,5)     RC(5,6)     RC(5,7)
            RC(5,8) RC(5,9) RC(5,10)    RC(5,11)    RC(5,12)

            RC(6,0) RC(6,1) RC(6,2)                             RC(6,5)
                    RC(6,9) RC(6,10)    RC(6,11)    RC(6,12)    RC(6,13)    RC(6,14)
        >;
    };
};

&adc {
    status = "okay";
};

&gpiote {
    status = "okay";
};

&gpio0 {
    status = "okay";
    // nfc-pins = <0x09>, <0x0A>; // Define NFC pins as GPIO (use correct pin numbers)
    /* Repurpose NFC pins as GPIO */
    p0_09: p0_09 {
        gpio-hog;                  // Declare as a gpio-hog
        output-high;                // Set the initial state as high
        gpios = <&gpio0 9 GPIO_ACTIVE_HIGH>;  // Define the pin with active state
        label = "P0_09_HOG";        // Optional label
    };

    p0_10: p0_10 {
        gpio-hog;
        output-low;
        gpios = <&gpio0 10 GPIO_ACTIVE_LOW>;
        label = "P0_10_HOG";
    };
};

&gpio1 {
    status = "okay";
};

&usbd {
    status = "okay";
};


&flash0 {
    /*
     * For more information, see:
     * http://docs.zephyrproject.org/latest/devices/dts/flash_partitions.html
     */
    partitions {
        compatible = "fixed-partitions";
        #address-cells = <1>;
        #size-cells = <1>;

        sd_partition: partition@0 {
            label = "mbr";
            reg = <0x00000000 0x00001000>;
        };
        code_partition: partition@1000 {
            label = "code_partition";
            reg = <0x00001000 0x000d3000>;
        };

        storage_partition: partition@d4000 {
            label = "storage";
            reg = <0x000d4000 0x00020000>;
        };

        boot_partition: partition@f4000 {
            label = "adafruit_boot";
            reg = <0x000f4000 0x0000c000>;
        };
    };
};

&spi0 {
    status = "disabled";
};

// &spi0 {
//     compatible = "nordic,nrf-spim";
//     status = "okay";
//     mosi-pin = <13>; // was 5 in zaphod, 6 in ffkb byo-mcu
//     // Unused pins, needed for SPI definition, but not used by the ws2812 driver itself.
//     sck-pin = <7>;
//     miso-pin = <8>;
//     cs-gpios = <&gpio0 5 GPIO_ACTIVE_HIGH>;

//    led_strip: ws2812@0 {
//         compatible = "worldsemi,ws2812-spi";
//         label = "SK6812minie";

//         /* SPI */
//         reg = <0>; /* ignored, but necessary for SPI bindings */
//         spi-max-frequency = <4000000>;

//         /* WS2812 */
//         chain-length = <42>;
//         spi-one-frame = <0x70>;
//         spi-zero-frame = <0x40>;
//         color-mapping = <LED_COLOR_ID_GREEN
//                          LED_COLOR_ID_RED
//                          LED_COLOR_ID_BLUE>;
//     };
// };

